import pandas as pd
import catboost
from pyspark.sql import SparkSession

# Load the CatBoost model
model = catboost.CatBoostRegressor()
model.load_model("path_to_your_model")

# Get the expected feature names from the model
expected_features = model.feature_names_

# Load or define your Spark DataFrame
# Example of loading a DataFrame
# spark = SparkSession.builder.getOrCreate()
# full_duns_pred_val_spark = spark.read.csv("path_to_your_csv")

# Check if all expected features are in the DataFrame columns
actual_features = full_duns_pred_val_spark.columns

# Check for missing and extra features
missing_features = [feature for feature in expected_features if feature not in actual_features]
extra_features = [feature for feature in actual_features if feature not in expected_features]

# Print validation results
if missing_features:
    print("Missing features in DataFrame:", missing_features)
else:
    print("All expected features are present.")

if extra_features:
    print("Extra features in DataFrame:", extra_features)
else:
    print("No unexpected features in DataFrame.")

# If there are missing features, stop here and fix the DataFrame
if missing_features or extra_features:
    print("Feature mismatch detected. Adjust your DataFrame columns to match the expected features.")
else:
    # Proceed to convert Spark DataFrame to Pandas if all features match
    full_duns_pred_val = full_duns_pred_val_spark.toPandas()
    print("Feature validation passed. DataFrame is ready for prediction.")
